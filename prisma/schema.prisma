// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String
  posts    Post[]
  comments Comment[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  slug  String @unique
  posts Post[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  slug  String @unique
  posts Post[]
}

model Post {
  id          Int        @id @default(autoincrement())
  title       String
  content     String
  excerpt     String?
  featuredImage String?
  published   Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  authorId    Int
  author      User       @relation(fields: [authorId], references: [id])
  categoryId  Int?
  category    Category?  @relation(fields: [categoryId], references: [id])
  tags        Tag[]
  comments    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  authorName String
  authorEmail String
  approved  Boolean  @default(false)
  createdAt DateTime @default(now())
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
}
